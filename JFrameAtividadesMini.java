/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package froms;

import Portable.ItemCombo;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Random;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author felipe.dasilva
 */
public class JFrameAtividadesMini extends javax.swing.JFrame {

    public int lado = 0;
    public String url;
    public int vId;

    /**
     * Creates new form JFrameAtividadesMini
     */
    public JFrameAtividadesMini() {
        initComponents();
        Image iconImage = Toolkit.getDefaultToolkit().getImage("C:\\TimerIS\\smartwatch.png");
        this.setIconImage(iconImage);
        this.url = "jdbc:sqlite:C:/TimerIS/tempos.db";
        this.setAlwaysOnTop(true);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int screenWidth = screenSize.width;
        int screenHeight = screenSize.height;

        // Define a posição no canto inferior esquerdo
        int x = 0; // Lado esquerdo
        int y = screenHeight - this.getHeight(); // Inferior     
        this.setLocation(x, y - 50);

        SelectAtividades();
        VerificarTarefasAbertas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox2 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(450, 70));
        setResizable(false);

        jComboBox2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(8, 199, 146));
        jButton1.setText("▶");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(237, 41, 57));
        jButton2.setText("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 153, 218));
        jButton3.setText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 153, 218));
        jButton4.setText("D");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, 0, 168, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox2)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFrameAtividades mini = new JFrameAtividades();
        stop();
        mini.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        play();
        jComboBox2.setEnabled(false);
        jButton1.setEnabled(false);
        jButton2.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        stop();
        jComboBox2.setEnabled(true);
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        LocalTela();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameAtividadesMini.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameAtividadesMini.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameAtividadesMini.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameAtividadesMini.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameAtividadesMini().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox2;
    // End of variables declaration//GEN-END:variables

    public void play() {
        this.vId = ((ItemCombo) jComboBox2.getSelectedItem()).getId();
        String sql = "INSERT INTO tempos (id_atividades) VALUES (?)";
        try (Connection connection = DriverManager.getConnection(this.url);
                PreparedStatement pstmt = connection.prepareStatement(sql)) {
            // Definir valores nos placeholders
            pstmt.setInt(1, this.vId);

            int linhasAfetadas = pstmt.executeUpdate();
            if (linhasAfetadas > 0) {
                System.out.println("Cadastro de tempo realizado com sucesso!");
            } else {
                System.out.println("Nenhuma tempo foi inserida.");
            }
        } catch (SQLException e) {
            System.err.println("Erro SQL: " + e.getMessage());
            e.printStackTrace(); // Para depuração
        }

    }

    public void stop() {
        this.vId = ((ItemCombo) jComboBox2.getSelectedItem()).getId();
        String sql = "UPDATE tempos SET dataFinal = DATETIME('now', '-3 hours') WHERE dataFinal is null and id_atividades = " + this.vId;
        try (Connection conn = DriverManager.getConnection(this.url);
                PreparedStatement pstmt = conn.prepareStatement(sql)) {
            int rowsAffected = pstmt.executeUpdate();
            System.out.println("Atualização bem-sucedida! Linhas afetadas: " + rowsAffected);
            System.out.println(sql);
        } catch (SQLException e) {
            System.out.println("Erro ao atualizar a filial: " + e.getMessage());

        }

    }

    public void SelectAtividades() {
        StringBuilder sb = new StringBuilder();
        sb.append("select id,atividade from atividades");

        try (Connection connection = DriverManager.getConnection(this.url);
                PreparedStatement statement = connection.prepareStatement(sb.toString());
                ResultSet resultSet = statement.executeQuery()) {
            while (resultSet.next()) {
                jComboBox2.addItem(new ItemCombo(resultSet.getInt("id"), resultSet.getString("atividade")));
            }
        } catch (SQLException e) {
            e.printStackTrace(); // Para fins de depuração
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void VerificarTarefasAbertas() {

        String sql = "select id_atividades as id_atividades from tempos where dataFinal is null";
        int y = 0;
        boolean avaliacao = false;
        try (Connection connection = DriverManager.getConnection(this.url);
                PreparedStatement statement = connection.prepareStatement(sql);
                ResultSet resultSet = statement.executeQuery()) {
            while (resultSet.next()) {
                selecionarItemPorId(resultSet.getInt("id_atividades"));
            }
        } catch (SQLException e) {
            e.printStackTrace(); // Para fins de depuração
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados", "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void selecionarItemPorId(int id) {
        for (int i = 0; i < jComboBox2.getItemCount(); i++) {
            ItemCombo item = (ItemCombo) jComboBox2.getItemAt(i);
            if (item.getId() == id) {
                jComboBox2.setSelectedIndex(i);
                break;
            }
        }
        jComboBox2.setEnabled(false);
        jButton1.setEnabled(false);
        jButton2.setEnabled(true);
    }

    public void LocalTela() {
        if (this.lado == 1) {
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            int screenWidth = screenSize.width;
            int screenHeight = screenSize.height;

            // Define a posição no canto inferior direito
            int x = screenWidth - this.getWidth(); // Lado direito
            int y = screenHeight - this.getHeight(); // Inferior

            this.setLocation(x, y - 50);
            this.lado = 0;
            jButton4.setText("E");
        } else {
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            int screenWidth = screenSize.width;
            int screenHeight = screenSize.height;

            // Define a posição no canto inferior esquerdo
            int x = 0; // Lado esquerdo
            int y = screenHeight - this.getHeight(); // Inferior     
            this.setLocation(x, y - 50);
            this.lado = 1;
            jButton4.setText("D");
        }

    }
}
